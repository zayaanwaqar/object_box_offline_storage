// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart';
import 'package:objectbox_sync_flutter_libs/objectbox_sync_flutter_libs.dart';

import 'user_model_object.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <ModelEntity>[
  ModelEntity(
      id: const IdUid(1, 7615987500517719973),
      name: 'UserModelObject',
      lastPropertyId: const IdUid(6, 7951498961686304194),
      flags: 0,
      properties: <ModelProperty>[
        ModelProperty(
            id: const IdUid(1, 2278523024221879804),
            name: 'internalId',
            type: 6,
            flags: 1),
        ModelProperty(
            id: const IdUid(2, 8117220980478559912),
            name: 'userId',
            type: 6,
            flags: 8,
            indexId: const IdUid(1, 4575108284146096040)),
        ModelProperty(
            id: const IdUid(3, 4600574309038488451),
            name: 'name',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(4, 9178713075232861531),
            name: 'email',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(5, 3728412922904643849),
            name: 'mobile',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(6, 7951498961686304194),
            name: 'roll',
            type: 9,
            flags: 0)
      ],
      relations: <ModelRelation>[],
      backlinks: <ModelBacklink>[])
];

/// Shortcut for [Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [Store.new] for an explanation of all parameters.
Future<Store> openStore(
        {String? directory,
        int? maxDBSizeInKB,
        int? fileMode,
        int? maxReaders,
        bool queriesCaseSensitiveDefault = true,
        String? macosApplicationGroup}) async =>
    Store(getObjectBoxModel(),
        directory: directory ?? (await defaultStoreDirectory()).path,
        maxDBSizeInKB: maxDBSizeInKB,
        fileMode: fileMode,
        maxReaders: maxReaders,
        queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
        macosApplicationGroup: macosApplicationGroup);

/// Returns the ObjectBox model definition for this project for use with
/// [Store.new].
ModelDefinition getObjectBoxModel() {
  final model = ModelInfo(
      entities: _entities,
      lastEntityId: const IdUid(1, 7615987500517719973),
      lastIndexId: const IdUid(1, 4575108284146096040),
      lastRelationId: const IdUid(0, 0),
      lastSequenceId: const IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, EntityDefinition>{
    UserModelObject: EntityDefinition<UserModelObject>(
        model: _entities[0],
        toOneRelations: (UserModelObject object) => [],
        toManyRelations: (UserModelObject object) => {},
        getId: (UserModelObject object) => object.internalId,
        setId: (UserModelObject object, int id) {
          object.internalId = id;
        },
        objectToFB: (UserModelObject object, fb.Builder fbb) {
          final nameOffset =
              object.name == null ? null : fbb.writeString(object.name!);
          final emailOffset =
              object.email == null ? null : fbb.writeString(object.email!);
          final mobileOffset =
              object.mobile == null ? null : fbb.writeString(object.mobile!);
          final rollOffset =
              object.roll == null ? null : fbb.writeString(object.roll!);
          fbb.startTable(7);
          fbb.addInt64(0, object.internalId);
          fbb.addInt64(1, object.userId);
          fbb.addOffset(2, nameOffset);
          fbb.addOffset(3, emailOffset);
          fbb.addOffset(4, mobileOffset);
          fbb.addOffset(5, rollOffset);
          fbb.finish(fbb.endTable());
          return object.internalId;
        },
        objectFromFB: (Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final internalIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final userIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final emailParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final mobileParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 12);
          final rollParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 14);
          final object = UserModelObject(
              internalId: internalIdParam,
              userId: userIdParam,
              name: nameParam,
              email: emailParam,
              mobile: mobileParam,
              roll: rollParam);

          return object;
        })
  };

  return ModelDefinition(model, bindings);
}

/// [UserModelObject] entity fields to define ObjectBox queries.
class UserModelObject_ {
  /// see [UserModelObject.internalId]
  static final internalId =
      QueryIntegerProperty<UserModelObject>(_entities[0].properties[0]);

  /// see [UserModelObject.userId]
  static final userId =
      QueryIntegerProperty<UserModelObject>(_entities[0].properties[1]);

  /// see [UserModelObject.name]
  static final name =
      QueryStringProperty<UserModelObject>(_entities[0].properties[2]);

  /// see [UserModelObject.email]
  static final email =
      QueryStringProperty<UserModelObject>(_entities[0].properties[3]);

  /// see [UserModelObject.mobile]
  static final mobile =
      QueryStringProperty<UserModelObject>(_entities[0].properties[4]);

  /// see [UserModelObject.roll]
  static final roll =
      QueryStringProperty<UserModelObject>(_entities[0].properties[5]);
}
